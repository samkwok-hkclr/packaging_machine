/*******************************************************************************
    CANopen Object Dictionary definition for CANopenNode V4

    This file was automatically generated by CANopenEditor v4.2.1-10-g18610b3+18610b31a2f6eb6b7d403cb41099aabf6b151e77

    https://github.com/CANopenNode/CANopenNode
    https://github.com/CANopenNode/CANopenEditor

    DON'T EDIT THIS FILE MANUALLY !!!!
********************************************************************************

    File info:
        File Names:   OD.h; OD.c
        Project File: DS301_profile.xpd
        File Version: 1

        Created:      2024-09-17 15:00:00
        Created By:   Sam Kwok
        Modified:     2024-10-02 17:33:45
        Modified By:  Sam Kwok

    Device Info:
        Vendor Name:  HKCLR
        Vendor ID:    1234
        Product Name: Packaging Machine
        Product ID:   0001

        Description:  The Object Dictionary of Packaging Machine
*******************************************************************************/

#ifndef OD_H
#define OD_H
/*******************************************************************************
    Counters of OD objects
*******************************************************************************/
#define OD_CNT_NMT 1
#define OD_CNT_EM 1
#define OD_CNT_SYNC 1
#define OD_CNT_SYNC_PROD 1
#define OD_CNT_STORAGE 1
#define OD_CNT_TIME 1
#define OD_CNT_EM_PROD 1
#define OD_CNT_HB_CONS 1
#define OD_CNT_HB_PROD 1
#define OD_CNT_SDO_SRV 1
#define OD_CNT_SDO_CLI 1
#define OD_CNT_TPDO 4


/*******************************************************************************
    Sizes of OD arrays
*******************************************************************************/
#define OD_CNT_ARR_1003 16
#define OD_CNT_ARR_1010 4
#define OD_CNT_ARR_1011 4
#define OD_CNT_ARR_1016 8


/*******************************************************************************
    OD data declaration of all groups
*******************************************************************************/
typedef struct {
    uint32_t x1000_deviceType;
    uint32_t x1005_COB_ID_SYNCMessage;
    uint32_t x1006_communicationCyclePeriod;
    uint32_t x1007_synchronousWindowLength;
    uint32_t x1012_COB_IDTimeStampObject;
    uint32_t x1014_COB_ID_EMCY;
    uint16_t x1015_inhibitTimeEMCY;
    uint8_t x1016_consumerHeartbeatTime_sub0;
    uint32_t x1016_consumerHeartbeatTime[OD_CNT_ARR_1016];
    uint16_t x1017_producerHeartbeatTime;
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t vendor_ID;
        uint32_t productCode;
        uint32_t revisionNumber;
        uint32_t serialNumber;
    } x1018_identity;
    uint8_t x1019_synchronousCounterOverflowValue;
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t COB_IDClientToServerTx;
        uint32_t COB_IDServerToClientRx;
        uint8_t node_IDOfTheSDOServer;
    } x1280_SDOClientParameter;
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t COB_IDUsedByTPDO;
        uint8_t transmissionType;
        uint16_t inhibitTime;
        uint16_t eventTimer;
        uint8_t SYNCStartValue;
    } x1800_TPDOCommunicationParameter;
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t COB_IDUsedByTPDO;
        uint8_t transmissionType;
        uint16_t inhibitTime;
        uint16_t eventTimer;
        uint8_t SYNCStartValue;
    } x1801_TPDOCommunicationParameter;
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t COB_IDUsedByTPDO;
        uint8_t transmissionType;
        uint16_t inhibitTime;
        uint16_t eventTimer;
        uint8_t SYNCStartValue;
    } x1802_TPDOCommunicationParameter;
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t COB_IDUsedByTPDO;
        uint8_t transmissionType;
        uint16_t inhibitTime;
        uint16_t eventTimer;
        uint8_t SYNCStartValue;
    } x1803_TPDOCommunicationParameter;
    struct {
        uint8_t numberOfMappedApplicationObjectsInPDO;
        uint32_t applicationObject1;
        uint32_t applicationObject2;
        uint32_t applicationObject3;
        uint32_t applicationObject4;
        uint32_t applicationObject5;
        uint32_t applicationObject6;
        uint32_t applicationObject7;
        uint32_t applicationObject8;
    } x1A00_TPDOMappingParameter;
    struct {
        uint8_t numberOfMappedApplicationObjectsInPDO;
        uint32_t applicationObject1;
        uint32_t applicationObject2;
        uint32_t applicationObject3;
        uint32_t applicationObject4;
        uint32_t applicationObject5;
        uint32_t applicationObject6;
        uint32_t applicationObject7;
        uint32_t applicationObject8;
    } x1A01_TPDOMappingParameter;
    struct {
        uint8_t numberOfMappedApplicationObjectsInPDO;
        uint32_t applicationObject1;
        uint32_t applicationObject2;
        uint32_t applicationObject3;
        uint32_t applicationObject4;
        uint32_t applicationObject5;
        uint32_t applicationObject6;
        uint32_t applicationObject7;
        uint32_t applicationObject8;
    } x1A02_TPDOMappingParameter;
    struct {
        uint8_t numberOfMappedApplicationObjectsInPDO;
        uint32_t applicationObject1;
        uint32_t applicationObject2;
        uint32_t applicationObject3;
        uint32_t applicationObject4;
        uint32_t applicationObject5;
        uint32_t applicationObject6;
        uint32_t applicationObject7;
        uint32_t applicationObject8;
    } x1A03_TPDOMappingParameter;
} OD_PERSIST_COMM_t;

typedef struct {
    uint8_t x1001_errorRegister;
    uint8_t x1010_storeParameters_sub0;
    uint32_t x1010_storeParameters[OD_CNT_ARR_1010];
    uint8_t x1011_restoreDefaultParameters_sub0;
    uint32_t x1011_restoreDefaultParameters[OD_CNT_ARR_1011];
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t COB_IDClientToServerRx;
        uint32_t COB_IDServerToClientTx;
    } x1200_SDOServerParameter;
    uint16_t x6000_targetHeaterTemperature;
    uint16_t x6001_currentHeaterTemperature;
    uint16_t x6002_ADC_Temperature;
    uint8_t x6003_disableHeater;
    uint16_t x6004_kp;
    uint16_t x6005_ki;
    uint16_t x6006_kd;
    uint16_t x6010_packageDispenserPulsesPerRevolution;
    uint16_t x6011_packageDispenserRotatePulses;
    uint8_t x6012_packageDispenserRotateDirection;
    uint8_t x6013_packageDispenserEnable;
    uint16_t x6014_packageDispenserCurrentPulse;
    uint8_t x6018_packageDispenserStatus;
    uint8_t x6019_packageDispenserControl;
    uint16_t x6020_pillGatePulsesPerRevolution;
    uint16_t x6021_pillGateRotatePulses;
    uint8_t x6022_pillGateRotateDirection;
    uint8_t x6023_pillGateEnable;
    uint16_t x6024_pillGateCurrentPulse;
    uint8_t x6027_pillGateMode;
    uint8_t x6028_pillGateStatus;
    uint8_t x6029_pillGateControl;
    uint8_t x6030_rollerRotateSteps;
    uint8_t x6031_rollerRotationSpeed;
    uint8_t x6032_rollerRotateDirection;
    uint8_t x6033_rollerCurrentStep;
    uint8_t x6034_rollerTargetBraker;
    uint8_t x6035_rollerCurrentBraker;
    uint8_t x6037_rollerMode;
    uint8_t x6038_rollerStatus;
    uint8_t x6039_rollerControl;
    uint8_t x6040_packageLengthRotateSteps;
    uint8_t x6041_packageLengthRotationSpeed;
    uint8_t x6042_packageLengthRotateDirection;
    uint8_t x6043_packageLengthCurrentStep;
    uint8_t x6044_packageLengthTargetBraker;
    uint8_t x6045_packageLengthCurrentBraker;
    uint8_t x6047_packageLengthMode;
    uint8_t x6048_packageLengthStatus;
    uint8_t x6049_packageLengthControl;
    uint8_t x6050_valve1Control;
    uint8_t x6051_valve2Control;
    uint8_t x6052_valve3Control;
    uint8_t x6053_valve4Control;
    uint8_t x6054_valve1Status;
    uint8_t x6055_valve2Status;
    uint8_t x6056_valve3Status;
    uint8_t x6057_valve4Status;
    uint8_t x6060_reedSwitch1Status;
    uint8_t x6061_reedSwitch2Status;
    uint8_t x6062_reedSwitch3Status;
    uint8_t x6063_reedSwitch4Status;
    uint8_t x6064_reedSwitch5Status;
    uint8_t x6065_reedSwitch6Status;
    uint8_t x6066_reedSwitch7Status;
    uint8_t x6067_reedSwitch8Status;
} OD_RAM_t;

#ifndef OD_ATTR_PERSIST_COMM
#define OD_ATTR_PERSIST_COMM
#endif
extern OD_ATTR_PERSIST_COMM OD_PERSIST_COMM_t OD_PERSIST_COMM;

#ifndef OD_ATTR_RAM
#define OD_ATTR_RAM
#endif
extern OD_ATTR_RAM OD_RAM_t OD_RAM;

#ifndef OD_ATTR_OD
#define OD_ATTR_OD
#endif
extern OD_ATTR_OD OD_t *OD;


/*******************************************************************************
    Object dictionary entries - shortcuts
*******************************************************************************/
#define OD_ENTRY_H1000 &OD->list[0]
#define OD_ENTRY_H1001 &OD->list[1]
#define OD_ENTRY_H1003 &OD->list[2]
#define OD_ENTRY_H1005 &OD->list[3]
#define OD_ENTRY_H1006 &OD->list[4]
#define OD_ENTRY_H1007 &OD->list[5]
#define OD_ENTRY_H1010 &OD->list[6]
#define OD_ENTRY_H1011 &OD->list[7]
#define OD_ENTRY_H1012 &OD->list[8]
#define OD_ENTRY_H1014 &OD->list[9]
#define OD_ENTRY_H1015 &OD->list[10]
#define OD_ENTRY_H1016 &OD->list[11]
#define OD_ENTRY_H1017 &OD->list[12]
#define OD_ENTRY_H1018 &OD->list[13]
#define OD_ENTRY_H1019 &OD->list[14]
#define OD_ENTRY_H1200 &OD->list[15]
#define OD_ENTRY_H1280 &OD->list[16]
#define OD_ENTRY_H1800 &OD->list[17]
#define OD_ENTRY_H1801 &OD->list[18]
#define OD_ENTRY_H1802 &OD->list[19]
#define OD_ENTRY_H1803 &OD->list[20]
#define OD_ENTRY_H1A00 &OD->list[21]
#define OD_ENTRY_H1A01 &OD->list[22]
#define OD_ENTRY_H1A02 &OD->list[23]
#define OD_ENTRY_H1A03 &OD->list[24]
#define OD_ENTRY_H6000 &OD->list[25]
#define OD_ENTRY_H6001 &OD->list[26]
#define OD_ENTRY_H6002 &OD->list[27]
#define OD_ENTRY_H6003 &OD->list[28]
#define OD_ENTRY_H6004 &OD->list[29]
#define OD_ENTRY_H6005 &OD->list[30]
#define OD_ENTRY_H6006 &OD->list[31]
#define OD_ENTRY_H6010 &OD->list[32]
#define OD_ENTRY_H6011 &OD->list[33]
#define OD_ENTRY_H6012 &OD->list[34]
#define OD_ENTRY_H6013 &OD->list[35]
#define OD_ENTRY_H6014 &OD->list[36]
#define OD_ENTRY_H6018 &OD->list[37]
#define OD_ENTRY_H6019 &OD->list[38]
#define OD_ENTRY_H6020 &OD->list[39]
#define OD_ENTRY_H6021 &OD->list[40]
#define OD_ENTRY_H6022 &OD->list[41]
#define OD_ENTRY_H6023 &OD->list[42]
#define OD_ENTRY_H6024 &OD->list[43]
#define OD_ENTRY_H6027 &OD->list[44]
#define OD_ENTRY_H6028 &OD->list[45]
#define OD_ENTRY_H6029 &OD->list[46]
#define OD_ENTRY_H6030 &OD->list[47]
#define OD_ENTRY_H6031 &OD->list[48]
#define OD_ENTRY_H6032 &OD->list[49]
#define OD_ENTRY_H6033 &OD->list[50]
#define OD_ENTRY_H6034 &OD->list[51]
#define OD_ENTRY_H6035 &OD->list[52]
#define OD_ENTRY_H6037 &OD->list[53]
#define OD_ENTRY_H6038 &OD->list[54]
#define OD_ENTRY_H6039 &OD->list[55]
#define OD_ENTRY_H6040 &OD->list[56]
#define OD_ENTRY_H6041 &OD->list[57]
#define OD_ENTRY_H6042 &OD->list[58]
#define OD_ENTRY_H6043 &OD->list[59]
#define OD_ENTRY_H6044 &OD->list[60]
#define OD_ENTRY_H6045 &OD->list[61]
#define OD_ENTRY_H6047 &OD->list[62]
#define OD_ENTRY_H6048 &OD->list[63]
#define OD_ENTRY_H6049 &OD->list[64]
#define OD_ENTRY_H6050 &OD->list[65]
#define OD_ENTRY_H6051 &OD->list[66]
#define OD_ENTRY_H6052 &OD->list[67]
#define OD_ENTRY_H6053 &OD->list[68]
#define OD_ENTRY_H6054 &OD->list[69]
#define OD_ENTRY_H6055 &OD->list[70]
#define OD_ENTRY_H6056 &OD->list[71]
#define OD_ENTRY_H6057 &OD->list[72]
#define OD_ENTRY_H6060 &OD->list[73]
#define OD_ENTRY_H6061 &OD->list[74]
#define OD_ENTRY_H6062 &OD->list[75]
#define OD_ENTRY_H6063 &OD->list[76]
#define OD_ENTRY_H6064 &OD->list[77]
#define OD_ENTRY_H6065 &OD->list[78]
#define OD_ENTRY_H6066 &OD->list[79]
#define OD_ENTRY_H6067 &OD->list[80]


/*******************************************************************************
    Object dictionary entries - shortcuts with names
*******************************************************************************/
#define OD_ENTRY_H1000_deviceType &OD->list[0]
#define OD_ENTRY_H1001_errorRegister &OD->list[1]
#define OD_ENTRY_H1003_pre_definedErrorField &OD->list[2]
#define OD_ENTRY_H1005_COB_ID_SYNCMessage &OD->list[3]
#define OD_ENTRY_H1006_communicationCyclePeriod &OD->list[4]
#define OD_ENTRY_H1007_synchronousWindowLength &OD->list[5]
#define OD_ENTRY_H1010_storeParameters &OD->list[6]
#define OD_ENTRY_H1011_restoreDefaultParameters &OD->list[7]
#define OD_ENTRY_H1012_COB_IDTimeStampObject &OD->list[8]
#define OD_ENTRY_H1014_COB_ID_EMCY &OD->list[9]
#define OD_ENTRY_H1015_inhibitTimeEMCY &OD->list[10]
#define OD_ENTRY_H1016_consumerHeartbeatTime &OD->list[11]
#define OD_ENTRY_H1017_producerHeartbeatTime &OD->list[12]
#define OD_ENTRY_H1018_identity &OD->list[13]
#define OD_ENTRY_H1019_synchronousCounterOverflowValue &OD->list[14]
#define OD_ENTRY_H1200_SDOServerParameter &OD->list[15]
#define OD_ENTRY_H1280_SDOClientParameter &OD->list[16]
#define OD_ENTRY_H1800_TPDOCommunicationParameter &OD->list[17]
#define OD_ENTRY_H1801_TPDOCommunicationParameter &OD->list[18]
#define OD_ENTRY_H1802_TPDOCommunicationParameter &OD->list[19]
#define OD_ENTRY_H1803_TPDOCommunicationParameter &OD->list[20]
#define OD_ENTRY_H1A00_TPDOMappingParameter &OD->list[21]
#define OD_ENTRY_H1A01_TPDOMappingParameter &OD->list[22]
#define OD_ENTRY_H1A02_TPDOMappingParameter &OD->list[23]
#define OD_ENTRY_H1A03_TPDOMappingParameter &OD->list[24]
#define OD_ENTRY_H6000_targetHeaterTemperature &OD->list[25]
#define OD_ENTRY_H6001_currentHeaterTemperature &OD->list[26]
#define OD_ENTRY_H6002_ADC_Temperature &OD->list[27]
#define OD_ENTRY_H6003_disableHeater &OD->list[28]
#define OD_ENTRY_H6004_kp &OD->list[29]
#define OD_ENTRY_H6005_ki &OD->list[30]
#define OD_ENTRY_H6006_kd &OD->list[31]
#define OD_ENTRY_H6010_packageDispenserPulsesPerRevolution &OD->list[32]
#define OD_ENTRY_H6011_packageDispenserRotatePulses &OD->list[33]
#define OD_ENTRY_H6012_packageDispenserRotateDirection &OD->list[34]
#define OD_ENTRY_H6013_packageDispenserEnable &OD->list[35]
#define OD_ENTRY_H6014_packageDispenserCurrentPulse &OD->list[36]
#define OD_ENTRY_H6018_packageDispenserStatus &OD->list[37]
#define OD_ENTRY_H6019_packageDispenserControl &OD->list[38]
#define OD_ENTRY_H6020_pillGatePulsesPerRevolution &OD->list[39]
#define OD_ENTRY_H6021_pillGateRotatePulses &OD->list[40]
#define OD_ENTRY_H6022_pillGateRotateDirection &OD->list[41]
#define OD_ENTRY_H6023_pillGateEnable &OD->list[42]
#define OD_ENTRY_H6024_pillGateCurrentPulse &OD->list[43]
#define OD_ENTRY_H6027_pillGateMode &OD->list[44]
#define OD_ENTRY_H6028_pillGateStatus &OD->list[45]
#define OD_ENTRY_H6029_pillGateControl &OD->list[46]
#define OD_ENTRY_H6030_rollerRotateSteps &OD->list[47]
#define OD_ENTRY_H6031_rollerRotationSpeed &OD->list[48]
#define OD_ENTRY_H6032_rollerRotateDirection &OD->list[49]
#define OD_ENTRY_H6033_rollerCurrentStep &OD->list[50]
#define OD_ENTRY_H6034_rollerTargetBraker &OD->list[51]
#define OD_ENTRY_H6035_rollerCurrentBraker &OD->list[52]
#define OD_ENTRY_H6037_rollerMode &OD->list[53]
#define OD_ENTRY_H6038_rollerStatus &OD->list[54]
#define OD_ENTRY_H6039_rollerControl &OD->list[55]
#define OD_ENTRY_H6040_packageLengthRotateSteps &OD->list[56]
#define OD_ENTRY_H6041_packageLengthRotationSpeed &OD->list[57]
#define OD_ENTRY_H6042_packageLengthRotateDirection &OD->list[58]
#define OD_ENTRY_H6043_packageLengthCurrentStep &OD->list[59]
#define OD_ENTRY_H6044_packageLengthTargetBraker &OD->list[60]
#define OD_ENTRY_H6045_packageLengthCurrentBraker &OD->list[61]
#define OD_ENTRY_H6047_packageLengthMode &OD->list[62]
#define OD_ENTRY_H6048_packageLengthStatus &OD->list[63]
#define OD_ENTRY_H6049_packageLengthControl &OD->list[64]
#define OD_ENTRY_H6050_valve1Control &OD->list[65]
#define OD_ENTRY_H6051_valve2Control &OD->list[66]
#define OD_ENTRY_H6052_valve3Control &OD->list[67]
#define OD_ENTRY_H6053_valve4Control &OD->list[68]
#define OD_ENTRY_H6054_valve1Status &OD->list[69]
#define OD_ENTRY_H6055_valve2Status &OD->list[70]
#define OD_ENTRY_H6056_valve3Status &OD->list[71]
#define OD_ENTRY_H6057_valve4Status &OD->list[72]
#define OD_ENTRY_H6060_reedSwitch1Status &OD->list[73]
#define OD_ENTRY_H6061_reedSwitch2Status &OD->list[74]
#define OD_ENTRY_H6062_reedSwitch3Status &OD->list[75]
#define OD_ENTRY_H6063_reedSwitch4Status &OD->list[76]
#define OD_ENTRY_H6064_reedSwitch5Status &OD->list[77]
#define OD_ENTRY_H6065_reedSwitch6Status &OD->list[78]
#define OD_ENTRY_H6066_reedSwitch7Status &OD->list[79]
#define OD_ENTRY_H6067_reedSwitch8Status &OD->list[80]


/*******************************************************************************
    OD config structure
*******************************************************************************/
#ifdef CO_MULTIPLE_OD
#define OD_INIT_CONFIG(config) {\
    (config).CNT_NMT = OD_CNT_NMT;\
    (config).ENTRY_H1017 = OD_ENTRY_H1017;\
    (config).CNT_HB_CONS = OD_CNT_HB_CONS;\
    (config).CNT_ARR_1016 = OD_CNT_ARR_1016;\
    (config).ENTRY_H1016 = OD_ENTRY_H1016;\
    (config).CNT_EM = OD_CNT_EM;\
    (config).ENTRY_H1001 = OD_ENTRY_H1001;\
    (config).ENTRY_H1014 = OD_ENTRY_H1014;\
    (config).ENTRY_H1015 = OD_ENTRY_H1015;\
    (config).CNT_ARR_1003 = OD_CNT_ARR_1003;\
    (config).ENTRY_H1003 = OD_ENTRY_H1003;\
    (config).CNT_SDO_SRV = OD_CNT_SDO_SRV;\
    (config).ENTRY_H1200 = OD_ENTRY_H1200;\
    (config).CNT_SDO_CLI = OD_CNT_SDO_CLI;\
    (config).ENTRY_H1280 = OD_ENTRY_H1280;\
    (config).CNT_TIME = OD_CNT_TIME;\
    (config).ENTRY_H1012 = OD_ENTRY_H1012;\
    (config).CNT_SYNC = OD_CNT_SYNC;\
    (config).ENTRY_H1005 = OD_ENTRY_H1005;\
    (config).ENTRY_H1006 = OD_ENTRY_H1006;\
    (config).ENTRY_H1007 = OD_ENTRY_H1007;\
    (config).ENTRY_H1019 = OD_ENTRY_H1019;\
    (config).CNT_RPDO = 0;\
    (config).ENTRY_H1400 = NULL;\
    (config).ENTRY_H1600 = NULL;\
    (config).CNT_TPDO = OD_CNT_TPDO;\
    (config).ENTRY_H1800 = OD_ENTRY_H1800;\
    (config).ENTRY_H1A00 = OD_ENTRY_H1A00;\
    (config).CNT_LEDS = 0;\
    (config).CNT_GFC = 0;\
    (config).ENTRY_H1300 = NULL;\
    (config).CNT_SRDO = 0;\
    (config).ENTRY_H1301 = NULL;\
    (config).ENTRY_H1381 = NULL;\
    (config).ENTRY_H13FE = NULL;\
    (config).ENTRY_H13FF = NULL;\
    (config).CNT_LSS_SLV = 0;\
    (config).CNT_LSS_MST = 0;\
    (config).CNT_GTWA = 0;\
    (config).CNT_TRACE = 0;\
}
#endif

#endif /* OD_H */
