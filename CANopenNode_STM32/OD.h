/*******************************************************************************
    CANopen Object Dictionary definition for CANopenNode V4

    This file was automatically generated by CANopenEditor v4.2.1-10-g18610b3+18610b31a2f6eb6b7d403cb41099aabf6b151e77

    https://github.com/CANopenNode/CANopenNode
    https://github.com/CANopenNode/CANopenEditor

    DON'T EDIT THIS FILE MANUALLY !!!!
********************************************************************************

    File info:
        File Names:   OD.h; OD.c
        Project File: DS301_profile.xpd
        File Version: 1

        Created:      2024-09-17 15:00:00
        Created By:   Sam Kwok
        Modified:     2024-09-23 17:08:19
        Modified By:  Sam Kwok

    Device Info:
        Vendor Name:  HKCLR
        Vendor ID:    1234
        Product Name: Packaging Machine
        Product ID:   1234

        Description:  
*******************************************************************************/

#ifndef OD_H
#define OD_H
/*******************************************************************************
    Counters of OD objects
*******************************************************************************/
#define OD_CNT_NMT 1
#define OD_CNT_EM 1
#define OD_CNT_SYNC 1
#define OD_CNT_SYNC_PROD 1
#define OD_CNT_STORAGE 1
#define OD_CNT_TIME 1
#define OD_CNT_EM_PROD 1
#define OD_CNT_HB_CONS 1
#define OD_CNT_HB_PROD 1
#define OD_CNT_SDO_SRV 1
#define OD_CNT_SDO_CLI 1
#define OD_CNT_TPDO 1


/*******************************************************************************
    Sizes of OD arrays
*******************************************************************************/
#define OD_CNT_ARR_1003 16
#define OD_CNT_ARR_1010 4
#define OD_CNT_ARR_1011 4
#define OD_CNT_ARR_1016 8


/*******************************************************************************
    OD data declaration of all groups
*******************************************************************************/
typedef struct {
    uint32_t x1000_deviceType;
    uint32_t x1005_COB_ID_SYNCMessage;
    uint32_t x1006_communicationCyclePeriod;
    uint32_t x1007_synchronousWindowLength;
    uint32_t x1012_COB_IDTimeStampObject;
    uint32_t x1014_COB_ID_EMCY;
    uint16_t x1015_inhibitTimeEMCY;
    uint8_t x1016_consumerHeartbeatTime_sub0;
    uint32_t x1016_consumerHeartbeatTime[OD_CNT_ARR_1016];
    uint16_t x1017_producerHeartbeatTime;
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t vendor_ID;
        uint32_t productCode;
        uint32_t revisionNumber;
        uint32_t serialNumber;
    } x1018_identity;
    uint8_t x1019_synchronousCounterOverflowValue;
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t COB_IDClientToServerTx;
        uint32_t COB_IDServerToClientRx;
        uint8_t node_IDOfTheSDOServer;
    } x1280_SDOClientParameter;
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t COB_IDUsedByTPDO;
        uint8_t transmissionType;
        uint16_t inhibitTime;
        uint16_t eventTimer;
        uint8_t SYNCStartValue;
    } x1800_TPDOCommunicationParameter;
    struct {
        uint8_t numberOfMappedApplicationObjectsInPDO;
        uint32_t applicationObject1;
        uint32_t applicationObject2;
        uint32_t applicationObject3;
        uint32_t applicationObject4;
        uint32_t applicationObject5;
        uint32_t applicationObject6;
        uint32_t applicationObject7;
        uint32_t applicationObject8;
    } x1A00_TPDOMappingParameter;
} OD_PERSIST_COMM_t;

typedef struct {
    uint8_t x1001_errorRegister;
    uint8_t x1010_storeParameters_sub0;
    uint32_t x1010_storeParameters[OD_CNT_ARR_1010];
    uint8_t x1011_restoreDefaultParameters_sub0;
    uint32_t x1011_restoreDefaultParameters[OD_CNT_ARR_1011];
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t COB_IDClientToServerRx;
        uint32_t COB_IDServerToClientTx;
    } x1200_SDOServerParameter;
    uint16_t x2000_targetHeaterTemperature;
    uint16_t x2001_currentHeaterTemperature;
    uint16_t x2002_ADC_Temperature;
    uint8_t x2003_disableHeater;
    uint16_t x2010_packageDispenserPulses;
    uint16_t x2011_packageDispenserRotateSteps;
    uint8_t x2015_packageDispenserControl;
    uint16_t x2020_pillGatePulses;
    uint16_t x2021_pillGateRotateSteps;
    uint8_t x2025_pillGateControl;
    uint8_t x2035_rollerControl;
    uint32_t x2045_packageLengthControl;
    uint8_t x2050_valve1Control;
    uint8_t x2051_valve2Control;
    uint8_t x2052_valve3Control;
    uint8_t x2053_valve4Control;
    uint8_t x2054_valve1Status;
    uint8_t x2055_valve2Status;
    uint8_t x2056_valve3Status;
    uint8_t x2057_valve4Status;
    uint32_t x6000_velocity;
} OD_RAM_t;

#ifndef OD_ATTR_PERSIST_COMM
#define OD_ATTR_PERSIST_COMM
#endif
extern OD_ATTR_PERSIST_COMM OD_PERSIST_COMM_t OD_PERSIST_COMM;

#ifndef OD_ATTR_RAM
#define OD_ATTR_RAM
#endif
extern OD_ATTR_RAM OD_RAM_t OD_RAM;

#ifndef OD_ATTR_OD
#define OD_ATTR_OD
#endif
extern OD_ATTR_OD OD_t *OD;


/*******************************************************************************
    Object dictionary entries - shortcuts
*******************************************************************************/
#define OD_ENTRY_H1000 &OD->list[0]
#define OD_ENTRY_H1001 &OD->list[1]
#define OD_ENTRY_H1003 &OD->list[2]
#define OD_ENTRY_H1005 &OD->list[3]
#define OD_ENTRY_H1006 &OD->list[4]
#define OD_ENTRY_H1007 &OD->list[5]
#define OD_ENTRY_H1010 &OD->list[6]
#define OD_ENTRY_H1011 &OD->list[7]
#define OD_ENTRY_H1012 &OD->list[8]
#define OD_ENTRY_H1014 &OD->list[9]
#define OD_ENTRY_H1015 &OD->list[10]
#define OD_ENTRY_H1016 &OD->list[11]
#define OD_ENTRY_H1017 &OD->list[12]
#define OD_ENTRY_H1018 &OD->list[13]
#define OD_ENTRY_H1019 &OD->list[14]
#define OD_ENTRY_H1200 &OD->list[15]
#define OD_ENTRY_H1280 &OD->list[16]
#define OD_ENTRY_H1800 &OD->list[17]
#define OD_ENTRY_H1A00 &OD->list[18]
#define OD_ENTRY_H2000 &OD->list[19]
#define OD_ENTRY_H2001 &OD->list[20]
#define OD_ENTRY_H2002 &OD->list[21]
#define OD_ENTRY_H2003 &OD->list[22]
#define OD_ENTRY_H2010 &OD->list[23]
#define OD_ENTRY_H2011 &OD->list[24]
#define OD_ENTRY_H2015 &OD->list[25]
#define OD_ENTRY_H2020 &OD->list[26]
#define OD_ENTRY_H2021 &OD->list[27]
#define OD_ENTRY_H2025 &OD->list[28]
#define OD_ENTRY_H2035 &OD->list[29]
#define OD_ENTRY_H2045 &OD->list[30]
#define OD_ENTRY_H2050 &OD->list[31]
#define OD_ENTRY_H2051 &OD->list[32]
#define OD_ENTRY_H2052 &OD->list[33]
#define OD_ENTRY_H2053 &OD->list[34]
#define OD_ENTRY_H2054 &OD->list[35]
#define OD_ENTRY_H2055 &OD->list[36]
#define OD_ENTRY_H2056 &OD->list[37]
#define OD_ENTRY_H2057 &OD->list[38]
#define OD_ENTRY_H6000 &OD->list[39]


/*******************************************************************************
    Object dictionary entries - shortcuts with names
*******************************************************************************/
#define OD_ENTRY_H1000_deviceType &OD->list[0]
#define OD_ENTRY_H1001_errorRegister &OD->list[1]
#define OD_ENTRY_H1003_pre_definedErrorField &OD->list[2]
#define OD_ENTRY_H1005_COB_ID_SYNCMessage &OD->list[3]
#define OD_ENTRY_H1006_communicationCyclePeriod &OD->list[4]
#define OD_ENTRY_H1007_synchronousWindowLength &OD->list[5]
#define OD_ENTRY_H1010_storeParameters &OD->list[6]
#define OD_ENTRY_H1011_restoreDefaultParameters &OD->list[7]
#define OD_ENTRY_H1012_COB_IDTimeStampObject &OD->list[8]
#define OD_ENTRY_H1014_COB_ID_EMCY &OD->list[9]
#define OD_ENTRY_H1015_inhibitTimeEMCY &OD->list[10]
#define OD_ENTRY_H1016_consumerHeartbeatTime &OD->list[11]
#define OD_ENTRY_H1017_producerHeartbeatTime &OD->list[12]
#define OD_ENTRY_H1018_identity &OD->list[13]
#define OD_ENTRY_H1019_synchronousCounterOverflowValue &OD->list[14]
#define OD_ENTRY_H1200_SDOServerParameter &OD->list[15]
#define OD_ENTRY_H1280_SDOClientParameter &OD->list[16]
#define OD_ENTRY_H1800_TPDOCommunicationParameter &OD->list[17]
#define OD_ENTRY_H1A00_TPDOMappingParameter &OD->list[18]
#define OD_ENTRY_H2000_targetHeaterTemperature &OD->list[19]
#define OD_ENTRY_H2001_currentHeaterTemperature &OD->list[20]
#define OD_ENTRY_H2002_ADC_Temperature &OD->list[21]
#define OD_ENTRY_H2003_disableHeater &OD->list[22]
#define OD_ENTRY_H2010_packageDispenserPulses &OD->list[23]
#define OD_ENTRY_H2011_packageDispenserRotateSteps &OD->list[24]
#define OD_ENTRY_H2015_packageDispenserControl &OD->list[25]
#define OD_ENTRY_H2020_pillGatePulses &OD->list[26]
#define OD_ENTRY_H2021_pillGateRotateSteps &OD->list[27]
#define OD_ENTRY_H2025_pillGateControl &OD->list[28]
#define OD_ENTRY_H2035_rollerControl &OD->list[29]
#define OD_ENTRY_H2045_packageLengthControl &OD->list[30]
#define OD_ENTRY_H2050_valve1Control &OD->list[31]
#define OD_ENTRY_H2051_valve2Control &OD->list[32]
#define OD_ENTRY_H2052_valve3Control &OD->list[33]
#define OD_ENTRY_H2053_valve4Control &OD->list[34]
#define OD_ENTRY_H2054_valve1Status &OD->list[35]
#define OD_ENTRY_H2055_valve2Status &OD->list[36]
#define OD_ENTRY_H2056_valve3Status &OD->list[37]
#define OD_ENTRY_H2057_valve4Status &OD->list[38]
#define OD_ENTRY_H6000_velocity &OD->list[39]


/*******************************************************************************
    OD config structure
*******************************************************************************/
#ifdef CO_MULTIPLE_OD
#define OD_INIT_CONFIG(config) {\
    (config).CNT_NMT = OD_CNT_NMT;\
    (config).ENTRY_H1017 = OD_ENTRY_H1017;\
    (config).CNT_HB_CONS = OD_CNT_HB_CONS;\
    (config).CNT_ARR_1016 = OD_CNT_ARR_1016;\
    (config).ENTRY_H1016 = OD_ENTRY_H1016;\
    (config).CNT_EM = OD_CNT_EM;\
    (config).ENTRY_H1001 = OD_ENTRY_H1001;\
    (config).ENTRY_H1014 = OD_ENTRY_H1014;\
    (config).ENTRY_H1015 = OD_ENTRY_H1015;\
    (config).CNT_ARR_1003 = OD_CNT_ARR_1003;\
    (config).ENTRY_H1003 = OD_ENTRY_H1003;\
    (config).CNT_SDO_SRV = OD_CNT_SDO_SRV;\
    (config).ENTRY_H1200 = OD_ENTRY_H1200;\
    (config).CNT_SDO_CLI = OD_CNT_SDO_CLI;\
    (config).ENTRY_H1280 = OD_ENTRY_H1280;\
    (config).CNT_TIME = OD_CNT_TIME;\
    (config).ENTRY_H1012 = OD_ENTRY_H1012;\
    (config).CNT_SYNC = OD_CNT_SYNC;\
    (config).ENTRY_H1005 = OD_ENTRY_H1005;\
    (config).ENTRY_H1006 = OD_ENTRY_H1006;\
    (config).ENTRY_H1007 = OD_ENTRY_H1007;\
    (config).ENTRY_H1019 = OD_ENTRY_H1019;\
    (config).CNT_RPDO = 0;\
    (config).ENTRY_H1400 = NULL;\
    (config).ENTRY_H1600 = NULL;\
    (config).CNT_TPDO = OD_CNT_TPDO;\
    (config).ENTRY_H1800 = OD_ENTRY_H1800;\
    (config).ENTRY_H1A00 = OD_ENTRY_H1A00;\
    (config).CNT_LEDS = 0;\
    (config).CNT_GFC = 0;\
    (config).ENTRY_H1300 = NULL;\
    (config).CNT_SRDO = 0;\
    (config).ENTRY_H1301 = NULL;\
    (config).ENTRY_H1381 = NULL;\
    (config).ENTRY_H13FE = NULL;\
    (config).ENTRY_H13FF = NULL;\
    (config).CNT_LSS_SLV = 0;\
    (config).CNT_LSS_MST = 0;\
    (config).CNT_GTWA = 0;\
    (config).CNT_TRACE = 0;\
}
#endif

#endif /* OD_H */
